"""empty message

Revision ID: 8f8a8edc46a4
Revises: 546f0065e55d
Create Date: 2024-09-10 19:30:55.619844

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8f8a8edc46a4'
down_revision: Union[str, None] = '546f0065e55d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_inactive_table')
    op.add_column('code_table', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('code_table', sa.Column('type', sa.String(), nullable=False))
    op.add_column('code_table', sa.Column('code', sa.String(), nullable=False))
    op.add_column('code_table', sa.Column('attempts', sa.Integer(), nullable=False))
    op.add_column('code_table', sa.Column('expire', sa.DateTime(), nullable=False))
    op.create_foreign_key(None, 'code_table', 'user_table', ['user_id'], ['id'], ondelete='CASCADE')
    op.add_column('user_table', sa.Column('email_code_id', sa.Integer(), nullable=True))
    op.add_column('user_table', sa.Column('is_verified_email', sa.Boolean(), nullable=False, default=False)) # default=False added by NemoKam
    op.add_column('user_table', sa.Column('phone_number_code_id', sa.Integer(), nullable=True))
    op.add_column('user_table', sa.Column('is_verified_phone_number', sa.Boolean(), nullable=False, default=False)) # default=False added by NemoKam
    op.create_foreign_key(None, 'user_table', 'code_table', ['email_code_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'user_table', 'code_table', ['phone_number_code_id'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_table', type_='foreignkey')
    op.drop_constraint(None, 'user_table', type_='foreignkey')
    op.drop_column('user_table', 'is_verified_phone_number')
    op.drop_column('user_table', 'phone_number_code_id')
    op.drop_column('user_table', 'is_verified_email')
    op.drop_column('user_table', 'email_code_id')
    op.drop_constraint(None, 'code_table', type_='foreignkey')
    op.drop_column('code_table', 'expire')
    op.drop_column('code_table', 'attempts')
    op.drop_column('code_table', 'code')
    op.drop_column('code_table', 'type')
    op.drop_column('code_table', 'user_id')
    op.create_table('user_inactive_table',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_inactive_table_pkey')
    )
    # ### end Alembic commands ###
