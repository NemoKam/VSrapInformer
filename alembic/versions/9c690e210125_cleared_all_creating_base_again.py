"""Cleared all. Creating base again.

Revision ID: 9c690e210125
Revises: 
Create Date: 2024-10-02 19:28:34.499712

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9c690e210125'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('collection_table',
    sa.Column('vsrap_id', sa.Integer(), nullable=False),
    sa.Column('vsrap_url', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vsrap_id')
    )
    op.create_table('product_table',
    sa.Column('vsrap_id', sa.Integer(), nullable=False),
    sa.Column('vsrap_url', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('pre_order', sa.Boolean(), nullable=False),
    sa.Column('limited', sa.Boolean(), nullable=False),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vsrap_id')
    )
    op.create_table('user_table',
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('is_verified_email', sa.Boolean(), nullable=False),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('is_verified_phone_number', sa.Boolean(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('expire_datetime', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('code_table',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('type', postgresql.ENUM('email', 'phone_number', name='code_type_enum', create_type=False), nullable=False),
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('expire_datetime', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collection_product_table',
    sa.Column('collection_id', sa.Uuid(), nullable=True),
    sa.Column('product_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collection_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['product_table.id'], ondelete='CASCADE')
    )
    op.create_table('combination_table',
    sa.Column('vsrap_id', sa.Integer(), nullable=False),
    sa.Column('combination_number', sa.Integer(), nullable=False),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('price', sa.Integer(), nullable=False),
    sa.Column('product_vsrap_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_vsrap_id'], ['product_table.vsrap_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vsrap_id')
    )
    op.create_table('user_combination_table',
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('combination_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['combination_id'], ['combination_table.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user_table.id'], ondelete='CASCADE')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_combination_table')
    op.drop_table('combination_table')
    op.drop_table('collection_product_table')
    op.drop_table('code_table')
    op.drop_table('user_table')
    op.drop_table('product_table')
    op.drop_table('collection_table')
    # ### end Alembic commands ###
